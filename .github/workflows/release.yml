name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.2)'
        required: true
        type: string

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true

defaults:
  run:
    shell: pwsh

jobs:
  release:
    name: Build and Publish
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: '8.0.x'
    
    - name: Get version from release
      id: version
      run: |
        if ("${{ github.event_name }}" -eq "release") {
          $version = "${{ github.event.release.tag_name }}"
        } else {
          $version = "${{ github.event.inputs.version }}"
        }
        $cleanVersion = $version -replace '^v', ''
        echo "VERSION=$cleanVersion" >> $env:GITHUB_OUTPUT
        Write-Host "Using version: $cleanVersion"
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration Release --no-restore
    
    - name: Test
      run: dotnet test --configuration Release --no-build
    
    - name: Pack
      run: dotnet pack --configuration Release --no-build --output ./artifacts
    
    - name: Publish to NuGet
      run: |
        $files = Get-ChildItem ./artifacts -Filter "*.nupkg"
        foreach($file in $files) {
          Write-Host "Publishing package: $($file.Name)"
          dotnet nuget push $file.FullName `
            --api-key ${{ secrets.NUGET_API_KEY }} `
            --source https://api.nuget.org/v3/index.json `
            --skip-duplicate
        }
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages-${{ steps.version.outputs.VERSION }}
        path: ./artifacts/*.nupkg